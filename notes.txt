
shared vision: secure, non-trackable, non-monetizable communications...
IT developers/admins are empowered to change something about the technical infrastructure.

Idea: write a pledge draft, push to repository, accept PRs and publish and sign V1.
problem statement: how we see the current situation, problem of people working
for "tracking" systems, construct code of ethics.  



P2P messenging: elevator pitch
==============================================

Target customer
---------------------
non-IT experts, but interested in privacy, users of messengers (WhatsApp, Threema, TextSecure, SMS)

statement of need/opportunity
---------------------
people who value privacy without having to trust a third party.

product name
---------------------
X

what is it doing
---------------------
cross-platform messenger application (mobile, web, open protocols)


key benefit 
----------------------------------------------------

- end-to-end encryption
- multi-platform
- decentralized (P2P with optional supernodes)
- meshing

how is it unlike things that exist
----------------------------------------------------

- no ads
- no tracking / logging
- no central point of failure / congestion
- allow pseudonimity
- shared/public ownership of infrastructure


statement of primary differentiation
----------------------------------------------------

- reliability through decentralization/meshing
- free and open source (shared with textsecure)
- federated open protocols
- low latency  


what it will not do
-------------------------------------------

- no realtime video/voice calls
- no support for communication where anonymity is important 


Technical Stories
===================

User generates a device-specific ID
----------------------------------------

- create locally a new public/private key pair

User signals ID presence to a lookup service
-----------------------------------------------------

- update current IPs in presence entry


User aliases two of their device IDs
---------------------------------------------------

- one device communicates its public key from its ID 
  and its presence IP to the other out-of-band (QR/SMS/typing).

- the first device gets public key from second device
  
- update alias ids on each device 

- allow friends to access presence of new device

- optionally send out notifications to friends


Two Users become friends
-----------------------------

A user unfriends another
-----------------------------

A user introduces a friend to another friend
--------------------------------------------------

Andi introduces Tom to Holger because Tom
wants to contact Holger:

- Andi sends Tom's current presence entry to holger ("heads up")

- Andi sends Holger's current Presence entry to Tom

- Tom befriends Holger (Tom adds to his presence entry the
  encrypted shared secret for Holger)

- Tom sends "add me" message to Holger (who will reject
  it until he got the "heads up" message). The "add me"
  message also contains Tom's presence entry and shared secret.

- Holger befriends Tom (Holger adds to his presence entry the
  encrypted shared secret for Tom)
  
  OR
  
  Holger does nothing and thus Tom can only send further
  messages as long as Holger's presence entry remains valid.


A user uses a relay device on a stable-IP server
----------------------------------------------------

- user starts a relay service which generates
  its own ID (and presence entry)

- user pastes his presence entry to relay service config

- relay service sends message to user ("befriend me as relay")

- relay service uses same lookup IPs as user


A user uses their own lookup server (stable IP)
---------------------------------------------------

User signals their presence to friend(s)
-----------------------------------------------------

User asks for presence information about a friend
-----------------------------------------------------

User sends message to a friend
----------------------------------


Presence entry for an ID
=======================================

encrypted with a shared secret:

- IPs
- alias IDs
- relay IDs (hashed)
- (optional) lookup IPs

shared secret is encrypted individually for each friend.
(you can access/modify shared secret info with lookup service
in separate messages).
